project todo:

create a proper check_victory
	- create a method that creates 2 separate lists that are each member of each team. Then we compare with a for loop how many units have is_alive = False, and match that number to the len of the list. Then check to see if those are equal, and whoever is, return the variable to show who wins.

delete enemy team after battle ends or window closes. 
	- have to do a query that queries every row that isn't team = 0, then delete those rows.
	- current behavior = dismiss unit is done by currentRow of the QListTable, so if you make any units after the fight, it starts deleting units you can't see (from the enemy team) and rearranging the unit IDs, crazy stuff starts to happen.
	
implement (or decide) to add base class evasion
	- have to create a dictionary of the classes and then what their base evasion for phys and magic are. 

implement mana system
	- have mana start at zero and regen each turn.
	
Death timer
	- make it so if a downed unit passes 3 turns, they are considered True Dead. Maybe make another bool on the unit dictionary called permadeath or something.
	- create a function that checks if the current turn unit is down, and if they are, increment a variable by 1. If it hits 3, set the permadeath = True. 
	- or just delete them entirely from the init_list. Might be easier.

ability
	- first ability should be the Priest ability to simply heal a unit. You should select a friendly unit and it should heal them.
	- the ability should cost low mana to make it easy to test, and have a formula for how much it heals based on base_int.
	- need to create some kind of dropdown that populates with the available ability the current turn_unit would have. Maybe even make a popup.
	
items / inventory
	- this is such a doozy you should probably skip it as long as possible.
	- will require creating multiple tables that all link together via Foreign Keys. Then use those values to affect damage and stuff.
	- have to be able to equip/unequip items
	- offhand slot for shields, and let that effect their damage reduction and maybe even a chance to Deflect.
	
		- for combat, start small. Don't allow weapon swapping or anything. Just get the damage from the mainhand weapon slot.
	
shop
	- add War Funds as a player resource
	- create a player inventory that holds items that are not on any unit.
	- create a shop that randomly generates a list of buyable items.
	- sell inventory items for War Funds or spend War Funds to buy things. 