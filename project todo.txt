project todo:

ability
	- first ability should be the Priest ability to simply heal a unit. You should select a friendly unit and it should heal them.
	- the ability should cost low mana to make it easy to test, and have a formula for how much it heals based on base_int.
	- need to create some kind of dropdown that populates with the available ability the current turn_unit would have. Maybe even make a popup.
	
items / inventory
	- this is such a doozy you should probably skip it as long as possible.
	- will require creating multiple tables that all link together via Foreign Keys. Then use those values to affect damage and stuff.
	- have to be able to equip/unequip items
	- offhand slot for shields, and let that effect their damage reduction and maybe even a chance to Deflect.
	
		- for combat, start small. Don't allow weapon swapping or anything. Just get the damage from the mainhand weapon slot.
	
shop
	- add War Funds as a player resource
	- create a player inventory that holds items that are not on any unit.
	- create a shop that randomly generates a list of buyable items.
	- sell inventory items for War Funds or spend War Funds to buy things. 

	secondary ideas:

	- lead into the "RPG" side of the SRPG.
	- have a random roll chance that upgrades an item in a certain way. For instance, a Superior Iron Short Sword, that has 1 extra damage, and it costs more.
	- basic item modifiers like diablo


ability flow:


Turn_unit chooses from a dropdown list of their equipped abilities (make a tooltip underneath it)

turn_unit clicks the "ability" button on combat, with a target selected

CHECK:
does turn_unit have enough mana to cast this?
does turn_unit have enough action_points to cast this?
	if no, cancel
(where will the mana cost and action point cost come from? Will I reference a class object of an ability?)


def Heal(caster, target)

	caster mana - mana_cost
	caster action_points - action_points

	target health + heal
	done




